{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\fantasy-football\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\fantasy-football\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\fantasy-football\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\fantasy-football\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\alexh\\\\Desktop\\\\fantasy-football\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexh\\\\Desktop\\\\fantasy-football\\\\client\\\\src\\\\card-src\\\\CryptoCard\\\\CryptoChart\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport _ from 'lodash';\nimport config from './config';\nimport styles from './styles.scss';\n\nvar CryptoChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CryptoChart, _React$Component);\n\n  function CryptoChart(props) {\n    _classCallCheck(this, CryptoChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CryptoChart).call(this, props));\n  }\n\n  _createClass(CryptoChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chartColor = _this$props.chartColor,\n          chartData = _this$props.chartData;\n      var datasets = [Object.assign({}, config.datasets)];\n      _.head(datasets).data = chartData;\n      var data = {\n        datasets: datasets,\n        labels: Object.keys(chartData)\n      };\n\n      var dataFun = function dataFun(canvas) {\n        var ctx = canvas.getContext(\"2d\");\n        var gradient = ctx.createLinearGradient(50, 0, 50, canvas.height * 1.1);\n        gradient.addColorStop(0, 'rgba(236, 240, 241, 0.1)');\n        gradient.addColorStop(1, 'rgba(236, 240, 241, 0)');\n\n        var firstDataset = _.head(data.datasets);\n\n        firstDataset.borderColor = chartColor || firstDataset.borderColor;\n        firstDataset.backgroundColor = gradient;\n        return data;\n      };\n\n      return React.createElement(\"div\", {\n        className: \"crypto-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: dataFun,\n        options: config.options,\n        height: 128,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CryptoChart;\n}(React.Component);\n\nCryptoChart.propTypes = {\n  chartColor: PropTypes.string,\n  chartData: PropTypes.array\n};\nexport default CryptoChart;","map":{"version":3,"sources":["C:\\Users\\alexh\\Desktop\\fantasy-football\\client\\src\\card-src\\CryptoCard\\CryptoChart\\index.js"],"names":["React","PropTypes","Line","_","config","styles","CryptoChart","props","chartColor","chartData","datasets","Object","assign","head","data","labels","keys","dataFun","canvas","ctx","getContext","gradient","createLinearGradient","height","addColorStop","firstDataset","borderColor","backgroundColor","options","Component","propTypes","string","array"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oFACXA,KADW;AAElB;;;;6BAEQ;AAAA,wBAIH,KAAKA,KAJF;AAAA,UAELC,UAFK,eAELA,UAFK;AAAA,UAGLC,SAHK,eAGLA,SAHK;AAMP,UAAIC,QAAQ,GAAG,CACbC,MAAM,CAACC,MAAP,CAAc,EAAd,EACER,MAAM,CAACM,QADT,CADa,CAAf;AAKAP,MAAAA,CAAC,CAACU,IAAF,CAAOH,QAAP,EAAiBI,IAAjB,GAAwBL,SAAxB;AAEA,UAAIK,IAAI,GAAG;AACTJ,QAAAA,QAAQ,EAARA,QADS;AAETK,QAAAA,MAAM,EAAEJ,MAAM,CAACK,IAAP,CAAYP,SAAZ;AAFC,OAAX;;AAKA,UAAMQ,OAAO,GAAG,SAAVA,OAAU,CAAAC,MAAM,EAAI;AACxB,YAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,YAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,EAAzB,EAA6B,CAA7B,EAAgC,EAAhC,EAAoCJ,MAAM,CAACK,MAAP,GAAc,GAAlD,CAAjB;AACAF,QAAAA,QAAQ,CAACG,YAAT,CAAsB,CAAtB,EAAyB,0BAAzB;AACAH,QAAAA,QAAQ,CAACG,YAAT,CAAsB,CAAtB,EAAyB,wBAAzB;;AAEA,YAAIC,YAAY,GAAGtB,CAAC,CAACU,IAAF,CAAOC,IAAI,CAACJ,QAAZ,CAAnB;;AACAe,QAAAA,YAAY,CAACC,WAAb,GAA2BlB,UAAU,IAAIiB,YAAY,CAACC,WAAtD;AACAD,QAAAA,YAAY,CAACE,eAAb,GAA+BN,QAA/B;AAEA,eAAOP,IAAP;AACD,OAXD;;AAaA,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAEG,OADR;AAEE,QAAA,OAAO,EAAEb,MAAM,CAACwB,OAFlB;AAGE,QAAA,MAAM,EAAE,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EA7CuB5B,KAAK,CAAC6B,S;;AAgDhCvB,WAAW,CAACwB,SAAZ,GAAwB;AACtBtB,EAAAA,UAAU,EAAEP,SAAS,CAAC8B,MADA;AAEtBtB,EAAAA,SAAS,EAAER,SAAS,CAAC+B;AAFC,CAAxB;AAKA,eAAe1B,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport _ from 'lodash';\n\nimport config from './config';\nimport styles from './styles.scss';\n\nclass CryptoChart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let {\n      chartColor,\n      chartData\n    } = this.props;\n\n    let datasets = [\n      Object.assign({},\n        config.datasets\n      )\n    ];\n    _.head(datasets).data = chartData;\n\n    let data = {\n      datasets,\n      labels: Object.keys(chartData)\n    };\n\n    const dataFun = canvas => {\n      const ctx = canvas.getContext(\"2d\");\n      const gradient = ctx.createLinearGradient(50, 0, 50, canvas.height*1.1);\n      gradient.addColorStop(0, 'rgba(236, 240, 241, 0.1)');\n      gradient.addColorStop(1, 'rgba(236, 240, 241, 0)');\n\n      let firstDataset = _.head(data.datasets);\n      firstDataset.borderColor = chartColor || firstDataset.borderColor;\n      firstDataset.backgroundColor = gradient;\n\n      return data;\n    };\n\n    return (\n      <div className=\"crypto-chart\">\n        <Line\n          data={dataFun}\n          options={config.options}\n          height={128}\n        />\n      </div>\n    );\n  }\n}\n\nCryptoChart.propTypes = {\n  chartColor: PropTypes.string,\n  chartData: PropTypes.array\n};\n\nexport default CryptoChart;\n"]},"metadata":{},"sourceType":"module"}